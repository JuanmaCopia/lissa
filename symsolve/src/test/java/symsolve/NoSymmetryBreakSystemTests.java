package symsolve;

import org.junit.jupiter.api.Test;
import symsolve.config.SolverConfig;
import symsolve.explorers.impl.SymmetryBreakStrategy;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class NoSymmetryBreakSystemTests {

    @Test
    public void isSatisfiableHashMapTest() {
        SolverConfig config = new SolverConfig("examples.hashmap.HashMap", "2", SymmetryBreakStrategy.NO_SYMMETRY_BREAK);
        SymSolve symSolve = new SymSolve(config);
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 2, -1, -1, 0"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 2, -1, -1, 2"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 2, -1, -1, 1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 2, -1, -1, 0"));
    }

    @Test
    public void isSatisfiableTreeMapTest() {
        String className = "examples.treemap.TreeMap";
        SolverConfig config = new SolverConfig(className, "5", SymmetryBreakStrategy.NO_SYMMETRY_BREAK);
        SymSolve symSolve = new SymSolve(config);
        assertTrue(symSolve.isSatisfiable("0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 2, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, 1, -1, 0, 0, 2, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, 0, -1, 0, 0, 2, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 1, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, 1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, 0, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, 1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 3, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 4, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 2, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 1, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, 1, -1, 0, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, 0, -1, 0, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, 5, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, 5, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 1, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, -1, 3, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 2, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 1, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 0, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 3, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 2, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 0, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 5, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 3, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 2, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 3, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 2, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 0, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 0, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 3, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 2, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 4, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 3, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 2, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 4, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 3, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 5, 0, 1, 1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 1, 1, -1, 5, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 0, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, 5, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 0, -1, 1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 5, 4, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 0, 1, 1, -1, 4, 5, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 0, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 5, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 2, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, 1, -1, 0, 0, 2, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, 0, -1, 0, 0, 2, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, 2, 1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, -1, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 1, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, 1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, 0, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, 4, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, 1, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 3, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 4, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 2, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 1, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 0, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, 1, -1, 0, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, 0, -1, 0, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, 5, 0, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, 5, -1, -1, -1, 0, 0, 2, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 2, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 1, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, -1, 3, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 1, 2, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 2, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 3, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 1, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 0, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, 4, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, 3, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, 5, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, -1, 4, -1, 0, -1, 0, 0, 1, 1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, -1, 5, -1, 0, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 2, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 3, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 1, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 2, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 3, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 1, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 4, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 5, 0, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 2, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 3, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 1, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 4, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 2, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 3, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 0, 5, 1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 1, 1, -1, 0, 0, 1, 1, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 0, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, 5, 1, -1, 0, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 0, 4, -1, 1, -1, 0, 0, 1, 1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 4, -1, -1, 5, 4, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 2, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 3, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, 1, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, 0, -1, -1, 4, 5, -1, 1, -1, 0, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 2, -1, -1, -1, 0, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 1, 2, -1, -1, -1, 0, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, 2, -1, -1, -1, 0, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 2, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 1, 2, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, -1, -1, -1, 0, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 0, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 2, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 2, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 1, 2, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, -1, -1, -1, 3, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 0, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 0, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 0, 1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 5, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, -1, 2, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 0, 2, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 0, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 4, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 3, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 4, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 3, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 3, 0, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 4, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 2, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 0, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, 1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, -1, -1, -1, 0"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 5, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 4, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 3, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 2, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, 5, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, 4, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, 3, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, 2, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, 1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, -1, -1, 0, 0, 3, 1, -1, 0, 0, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, 1, -1, 0, 0, 3, 1, -1, 0, 0, -1, -1"));
        assertTrue(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, -1, 0, -1, 0, 0, 3, 1, -1, 0, 0, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 2, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 0, 5, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 0, 5, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("1, -1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1"));
    }

    @Test
    public void isSatisfiableScheduleTest() {
        String className = "examples.schedule.Schedule";
        SolverConfig config = new SolverConfig(className, "4", SymmetryBreakStrategy.NO_SYMMETRY_BREAK);
        SymSolve symSolve = new SymSolve(config);
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 3, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, -1, 1, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 3, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, -1, 1, 2, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 0, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertTrue(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 3, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 0, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
        assertFalse(symSolve.isSatisfiable("-1, -1, -1, -1, 1, 2, 3, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1"));
    }
}
